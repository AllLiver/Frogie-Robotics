{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\nmotor1 = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nmotor2 = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\nmotor3 = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nmotor4 = Motor(Ports.PORT4, GearSetting.RATIO_18_1, True)\nmotor5 = Motor(Ports.PORT11, GearSetting.RATIO_36_1, False)\nmotor6 = Motor(Ports.PORT12, GearSetting.RATIO_36_1, True)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\nmotor1.spin(FORWARD)\nmotor2.spin(FORWARD)\nmotor3.spin(FORWARD)\nmotor4.spin(FORWARD)\nmotor5.spin(FORWARD)\nmotor6.spin(FORWARD)\n\n\ndef clamp(num):\n    return max(min(num, 100), -100)\n\ndef moveDriveTrain(x, y, yaw):\n    motor1.set_velocity(clamp((y + x) + yaw), PERCENT)\n    motor2.set_velocity(clamp((y + (x * -1)) + yaw * -1), PERCENT)\n    motor3.set_velocity(clamp((y + (x * -1) + yaw)), PERCENT)\n    motor4.set_velocity(clamp((y + x) + yaw * -1), PERCENT)\n\nbrain.screen.print(\"Driver mode\")\n\nwhile True:\n    horizontal = controller_1.axis1.position() / 2 \n    vertical = controller_1.axis2.position() / 2\n    yaw = (controller_1.axis4.position()) / 2\n\n    moveDriveTrain(horizontal, vertical, yaw)\n    \n    if controller_1.buttonR2.pressing() == True:\n        motor5.set_velocity(100, PERCENT)\n        motor6.set_velocity(100, PERCENT)\n\n    elif controller_1.buttonR1.pressing() == True:\n        motor5.set_velocity(-25, PERCENT)\n        motor6.set_velocity(-25, PERCENT)\n\n    else:\n        motor5.set_velocity(0, PERCENT)\n        motor6.set_velocity(0, PERCENT)","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"motor1","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"motor2","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[3],"name":"motor3","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[4],"name":"motor4","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[11],"name":"motor5","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22},{"port":[12],"name":"motor6","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio36_1"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.2","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}