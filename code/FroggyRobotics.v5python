{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\nmotor1 = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nmotor2 = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nmotor3 = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nmotor4 = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n\n\n\n\n#endregion VEXcode Generated Robot Configuration\n\n\n# Drivetrain layout\n\n# Motor1 Motor2\n# Motor3 Motor4\n\n# To move forward drive motor1 and motor2 forwards\n# To move backward drive motor3 and motor4 backwards\n# To move right drive motor2 backward and motor4 forwards\n# To move left drive motor 1 backward and motor3 forwards\n\n# to yaw right move motor1 forwards, motor 2 backwards, motor4 backwards, and motor3 forwards\n# to yaw left move motor1 backwards, motor 2 forwards, motor 4 forwards, and motor3 backwards\n\ndef analogMotor(motor, movPosition):\n\n    motorSpin = 360*(abs(movPosition)/100)\n\n    if movPosition > 0.5:\n\n        motor.spin_for(FORWARD, motorSpin, DEGREES)\n\n    elif movPosition < -0.5:\n\n        motor.spin_for(REVERSE, motorSpin, DEGREES)\n\n\ndef driver_control():\n\n    brain.screen.print(\"Driver mode\")\n\n    vertical = controller.axis2.position()\n    horizontal = controller.axis1.position()\n    yaw = controller.axis4.position()\n\n    if vertical > 10:\n        motor1.spin(FORWARD)\n        motor2.spin(FORWARD)\n\n    elif vertical < -10:\n        motor1.spin(REVERSE)\n        motor2.spin(REVERSE)\n\n    if horizontal > 10:\n        motor3.spin(FORWARD)\n        motor4.spin(FORWARD)\n\n    elif horizontal < -10:\n        motor3.spin(REVERSE)\n        motor4.spin(REVERSE)\n\n    if yaw > 10:\n        motor3.spin(FORWARD)\n        motor4.spin(REVERSE)\n        motor1.spin(FORWARD)\n        motor2.spin(REVERSE)\n\n    elif yaw < -10:\n        motor3.spin(REVERSE)\n        motor4.spin(FORWARD)\n        motor1.spin(REVERSE)\n        motor2.spin(FORWARD)\n\ndef autonomous():\n    brain.screen.print(\"Autonomous mode\")\n","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"motor1","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[2],"name":"motor2","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[3],"name":"motor3","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[4],"name":"motor4","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}